-- example3_4b.exw

-- Step 1: add the new menu elements
-- Step 2: add the 'find' dialog

include iup.ew
include std/io.e -- for read_file, write_file

IupOpen()

    atom multitext = IupText()
    IupSetAttribute(multitext, "MULTILINE", "YES")
    IupSetAttribute(multitext, "EXPAND", "YES")
    IupSetAttribute(multitext, "FONT", "Arial, 12")

    atom
    item_open = IupItem("Open..."),
    item_saveas = IupItem("Save As..."),
    item_exit = IupItem("Exit"),
    item_font = IupItem("Font..."),
    item_find = IupItem("Find.."),
    item_goto = IupItem("Go To..."),
    item_about = IupItem("About...")

    IupSetCallback(item_exit, "ACTION", Icallback("exit_cb"))
    IupSetCallback(item_open, "ACTION", Icallback("open_cb"))
    IupSetCallback(item_saveas, "ACTION", Icallback("saveas_cb"))
    IupSetCallback(item_find, "ACTION", Icallback("item_find_action")) --v3_4b
    IupSetCallback(item_font, "ACTION", Icallback("font_cb"))
    IupSetCallback(item_about, "ACTION", Icallback("about_cb"))

    function readfile(sequence filename)
        object str = read_file(filename)
        if atom(str) then
            IupMessage("Error", sprintf("Cannot open file: %s", {filename}))
            return 0
        else
            return str  
        end if
    end function

    atom file_menu = IupMenu({
                item_open,
                item_saveas,
                IupSeparator(),
                item_exit
        })

    atom edit_menu = IupMenu({ -- v3_4a
                item_find, -- v3_4a
                item_goto -- v3_4a
        }) -- v3_4a

    atom format_menu = IupMenu({
                item_font
        })

    atom help_menu = IupMenu({
                item_about
        })

    atom sub_menu_file = IupSubmenu("File", file_menu)
    atom sub_menu_edit = IupSubmenu("Edit", edit_menu) -- v3_4a
    atom sub_menu_format = IupSubmenu("Format", format_menu)
    atom sub_menu_help = IupSubmenu("Help", help_menu)

    atom menu = IupMenu({
        sub_menu_file, 
        sub_menu_edit, -- v3_4a
        sub_menu_format, 
        sub_menu_help
        })

    atom vbox = IupVbox({
        multitext
        })

    atom dlg = IupDialog(vbox)
        IupSetAttributeHandle(dlg, "MENU", menu)
        IupSetAttribute(dlg, "TITLE", "Simple Notepad")
        IupSetAttribute(dlg, "SIZE", "HALFxHALF")

        IupShowXY(dlg, IUP_CENTER, IUP_CENTER)
        IupSetAttribute(dlg, "USERSIZE", NULL)

    -- v3_4b start
    Ihandle txt = IupText()
        IupSetAttribute(txt, "NAME", "FIND_TEXT")
        IupSetAttribute(txt, "VISIBLECOLUMNS", "20")
    Ihandle find_case = IupToggle("Case Sensitive")
        IupSetAttribute(find_case, "NAME", "FIND_CASE")
    Ihandle bt_next = IupButton("Find Next")
        IupSetAttribute(bt_next, "PADDING", "10x2")
    Ihandle bt_close = IupButton("Close")
        IupSetAttribute(bt_close, "PADDING", "10x2")
        IupSetCallback(bt_close, "ACTION", Icallback("bt_close_action")) --v3_4b
    Ihandle box = IupVbox({
        IupLabel("Find What:"),
        txt,
        find_case,
        IupSetAttributes(IupHbox({
        IupFill(),
        bt_next,
        bt_close}),
        "NORMALIZESIZE=HORIZONTAL")})
        IupSetAttribute(box, "MARGIN", "10x10")
        IupSetAttribute(box, "GAP", "5")
    Ihandle find_dlg = IupDialog(box)
        IupSetAttribute(find_dlg, "TITLE", "Find")
        IupSetAttribute(find_dlg, "DIALOGFRAME", "Yes")
        IupSetAttributeHandle(find_dlg, "DEFAULTENTER", bt_next)
        IupSetAttributeHandle(find_dlg, "DEFAULTESC", bt_close)
    -- v3_4b end

    IupMainLoop()
IupClose()

function writefile(sequence filename, sequence lines)
    atom fn = open(filename, "w")
    if fn = 0 then
        IupMessage("Error", sprintf("Cannot open file: %s", {filename}))
        return 0
    else
        write_file(filename, lines)
        return 1
    end if
end function

function open_cb()
    atom filedlg = IupFileDlg()
    IupSetAttribute(filedlg, "DIALOGTYPE", "OPEN")
    IupSetAttribute(filedlg, "EXTFILTER", "Text Files|*.txt||All Files|*.*|")

    IupPopup(filedlg, IUP_CENTER, IUP_CENTER)

    if not IupGetInt(filedlg, "STATUS") = 1 then
        sequence filename = IupGetAttribute(filedlg, "VALUE")
        object str = readfile(filename)
        if sequence(str) then
            IupSetAttribute(multitext, "VALUE", str)
        end if
    end if
    IupDestroy(filedlg)
    return IUP_DEFAULT
end function

function saveas_cb()
    atom filedlg = IupFileDlg()
    IupSetAttribute(filedlg, "DIALOGTYPE", "SAVE")
    IupSetAttribute(filedlg, "EXTFILTER", "Text Files|*.txt|All Files|*.*|")

    IupPopup(filedlg, IUP_CENTER, IUP_CENTER)

    sequence filename = IupGetAttribute(filedlg, "VALUE")
    sequence str = IupGetAttribute(multitext, "VALUE")
    integer count = IupGetInt(multitext, "COUNT")
    writefile(filename, str)

    IupDestroy(filedlg)
    return IUP_DEFAULT
end function

function font_cb()
    atom fontdlg = IupFontDlg()
    sequence font = IupGetAttribute(multitext, "FONT")
    IupSetStrAttribute(fontdlg, "VALUE", font)
    IupPopup(fontdlg, IUP_CENTER, IUP_CENTER)

    if IupGetInt(fontdlg, "STATUS") = 1 then
        font = IupGetAttribute(fontdlg, "VALUE")
        IupSetStrAttribute(multitext, "FONT", font)
    end if

    IupDestroy(fontdlg)
    return IUP_DEFAULT
end function

function about_cb() 
    IupMessage("About", "Simple Notepad")
    return IUP_DEFAULT
end function

function exit_cb()
    return IUP_CLOSE
end function

-- v3_4b start
function item_find_action()
    IupPopup(find_dlg, IUP_CENTERPARENT, IUP_CENTERPARENT)
    return IUP_DEFAULT
end function

function bt_close_action()
    IupHide(find_dlg) --is this the best choice?
    return IUP_DEFAULT
end function
-- v3_4b end