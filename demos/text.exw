--------------------------------------------------------------------------------
-- Demonstration: text.exw
--------------------------------------------------------------------------------
-- Notes:
--
-- Tested successfully on v4.0.5 and on v4.1.0(32-bit and 64-bit)
--------------------------------------------------------------------------------
--/*
--= Program: (iup4eu)(demos)test.exw
-- Description: creates a IupText that shows asterisks instead of characters
-- (password-like).
------
--[[[Version: 4.0.5.0
--Euphoria Versions: 4.0.5 upwards
--Author: C A Newbould
--Date: 2020.10.17
--Status: operational
--Changes:]]]
--* set out in standard arrangement
--
--==IupText Example in Euphoria
--
-- This example shows how one can use a text field for password, or other
-- secure value, entry.
------
--------------------------------------------------------------------------------
--/*
--==Interface
--*/
--------------------------------------------------------------------------------
--/*
--=== Includes
--*/
--------------------------------------------------------------------------------
include iup.ew
--------------------------------------------------------------------------------
--
--=== Constants
--
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--
--=== Euphoria types
--
--------------------------------------------------------------------------------
type Ihandle(object x)
    return 1
end type
--------------------------------------------------------------------------------
--
--=== Variables
--
--------------------------------------------------------------------------------
Ihandle pwd
sequence password
--------------------------------------------------------------------------------
--
--=== Routines
--
--------------------------------------------------------------------------------
function k_any(Ihandle self, integer c)
    switch (c) do
        case K_BS then
            integer size = length(password)
            if equal(size , 0) then
                return IUP_IGNORE
            end if
            password[size-1] = 0
            IupSetAttribute(pwd, "VALUE", password)
            return IUP_DEFAULT
        case K_CR then
        case K_SP then
        case K_ESC then
        case K_INS then
        case K_DEL then
        case K_TAB then
        case K_HOME then
        case K_UP then
        case K_PGUP then
        case K_LEFT then
        case K_MIDDLE then
        case K_RIGHT then
        case K_END then
        case K_DOWN then
        case K_PGDN then
            return IUP_IGNORE
        case else
            return IUP_DEFAULT
    end switch
    return 1
end function
--------------------------------------------------------------------------------
function action(Ihandle self, integer c, integer after)
    if (c) then
        integer size = length(password)
        password[size-1] = c
        password[size] = 0
        IupSetAttribute(pwd, "VALUE", password)
    end if
    return K_asterisk
end function
--------------------------------------------------------------------------------
procedure main()
    IupOpen()
    password = repeat(0, 100)
    Ihandle text = IupText(NULL)
    IupSetAttribute(text, "SIZE",  "200x")
    IupSetCallback(text, "ACTION", Icallback("action"))
    IupSetCallback(text, "K_ANY", Icallback("k_any"))
    pwd = IupText(NULL)
    IupSetAttribute(pwd, "READONLY", "YES")
    IupSetAttribute(pwd, "SIZE", "200x")
    Ihandle dlg = IupDialog(IupVbox({text, pwd}))
    IupSetAttribute(dlg, "TITLE", "IupText")
    IupShowXY(dlg, IUP_CENTER, IUP_CENTER)
    IupMainLoop()
    IupClose()
end procedure
--------------------------------------------------------------------------------
main()
--------------------------------------------------------------------------------
-- Previous versions
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
