--------------------------------------------------------------------------------
-- Demonstration: toggle.exw
--------------------------------------------------------------------------------
-- Notes:
--
-- Tested successfully on v4.0.5 and on v4.1.0(32-bit and 64-bit)
--------------------------------------------------------------------------------
--/*
--= Program: (iup4eu)(demos)toggle.exw
-- Description: creates a set of toggles
------
--[[[Version: 4.0.5.0
--Euphoria Versions: 4.0.5 upwards
--Author: C A Newbould
--Date: 2020.10.17
--Status: operational
--Changes:]]]
--* set out in standard arrangement
--
--==IupToggle Example in Euphoria
--
------
--------------------------------------------------------------------------------
--/*
--==Interface
--*/
--------------------------------------------------------------------------------
--/*
--=== Includes
--*/
--------------------------------------------------------------------------------
include iup.ew
--------------------------------------------------------------------------------
--
--=== Constants
--
--------------------------------------------------------------------------------
constant img_1 = allocate_image(
{
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,
    1,1,1,1,1,2,1,2,1,1,1,1,1,1,1,1,
    1,1,1,1,2,1,1,2,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,
    1,1,1,2,2,2,2,2,2,2,2,2,1,1,1,1,
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
})
constant img_2 = allocate_image(
{
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    1,1,1,1,2,2,2,2,2,2,1,1,1,1,1,1,
    1,1,1,2,1,1,1,1,1,1,2,1,1,1,1,1,
    1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,
    1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,
    1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,
    1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,
    1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,
    1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,
    1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,
    1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,
    1,1,1,2,2,2,2,2,2,2,2,2,1,1,1,1,
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
})
--------------------------------------------------------------------------------
--
--=== Euphoria types
--
--------------------------------------------------------------------------------
type Ihandle(object x)
    if atom(x) then
        return 1
    else
        return 0
    end if
end type
--------------------------------------------------------------------------------
--
--=== Variables
--
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--
--=== Routines
--
--------------------------------------------------------------------------------
function createimgs()
    Ihandle img1 = IupImage(16, 16, img_1)
    Ihandle img2 = IupImage(16, 16, img_2)
    IupSetHandle("img1", img1)
    IupSetHandle("img2", img2)
    IupSetAttribute(img1, "1", "255 255 255")
    IupSetAttribute(img1, "2", "0 192 0")
    IupSetAttribute(img2, "1", "255 255 255")
    IupSetAttribute(img2, "2", "0 192 0")
    return 1
end function
--------------------------------------------------------------------------------
function toggle_cb(Ihandle  ih, integer state)
    integer pos = IupGetChildPos(IupGetParent(ih), ih)
    printf(1, "toggle%d_cb(state=%d)\n", {pos+1, state})
    return IUP_DEFAULT
end function
--------------------------------------------------------------------------------
procedure main()
    IupOpen()
    createimgs()
    Ihandle toggle1 = IupToggle("toggle with image", NULL)
    Ihandle toggle2 = IupToggle("deactivated toggle with image", NULL)
    Ihandle toggle3 = IupToggle("regular toggle", NULL)
    Ihandle toggle4 = IupToggle("blue foreground color", NULL)
    Ihandle toggle5 = IupToggle("deactivated toggle", NULL)
    Ihandle toggle6 = IupToggle("toggle with Courier 14 Bold font", NULL)
    IupSetCallback(toggle1, "ACTION", Icallback("toggle_cb"))
    IupSetCallback(toggle3, "ACTION", Icallback("toggle_cb"))
    IupSetCallback(toggle4, "ACTION", Icallback("toggle_cb"))
    IupSetCallback(toggle6, "ACTION", Icallback("toggle_cb"))
    IupSetAttribute(toggle1, "IMAGE", "img1")   --  Toggle 1 uses image                  /
    IupSetAttribute(toggle2, "IMAGE", "img2")   --  Toggle 2 uses image                  /
    IupSetAttribute(toggle2, "ACTIVE", "NO")    --  Toggle 2 inactive                    /
    IupSetAttribute(toggle4, "FGCOLOR", "0 0 255")  --  Toggle 4 has blue foreground color   /
    IupSetAttribute(toggle5, "ACTIVE", "NO")    --  Toggle 6 inactive                    /
    IupSetAttribute(toggle6, "FONT", "Courier, Bold 14")    --  Toggle 8 has Courier 14 Bold font    /
    --  Creating box that contains the toggles
    Ihandle box =IupVbox({toggle1, toggle2, toggle3, toggle4, toggle5, toggle6})
    Ihandle toggles = IupRadio(box)  -- Grouping toggles
    toggles = box   -- No grouping
    --  Dialog  /
    Ihandle dlg = IupDialog(toggles)
    IupSetAttribute (dlg, "TITLE", "IupToggle")
    IupSetAttributes(dlg, "MARGIN=5x5, GAP=5, RESIZE=NO")
    --  Associates a menu to the dialog  /
    IupShowXY(dlg, IUP_CENTER, IUP_CENTER)
    IupMainLoop()
    IupClose()
end procedure
--------------------------------------------------------------------------------
main()
--------------------------------------------------------------------------------
-- Previous versions
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
