--------------------------------------------------------------------------------
-- Demonstration: val.exw
--------------------------------------------------------------------------------
-- Notes:
--
-- Tested successfully on v4.0.5 and on v4.1.0(32-bit and 64-bit)
--------------------------------------------------------------------------------
--/*
--= Program: (iup4eu)(demos)val.exw
-- Description: program to exemplify the IupVal element
------
--[[[Version: 4.0.5.0
--Euphoria Versions: 4.0.5 upwards
--Author: C A Newbould
--Date: 2020.10.17
--Status: operational
--Changes:]]]
--* set out in standard arrangement
--
--==IupVal Example in Euphoria
--
-- Two IupVal widgets are created: one vertically laid out; the other
-- horizontal.
-- Activating either gives a reading, which is colour coded depending upon`
-- the mode of activation.
--
------
--------------------------------------------------------------------------------
--/*
--==Interface
--*/
--------------------------------------------------------------------------------
--/*
--=== Includes
--*/
--------------------------------------------------------------------------------
include iup.ew
--------------------------------------------------------------------------------
--
--=== Constants
--
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--
--=== Euphoria types
--
--------------------------------------------------------------------------------
type Ihandle(object x)
    return 1
end type
--------------------------------------------------------------------------------
--
--=== Variables
--
--------------------------------------------------------------------------------
Ihandle lbl_h = NULL, lbl_v = NULL
--------------------------------------------------------------------------------
--
--=== Routines
--
--------------------------------------------------------------------------------
function mousemove(Ihandle c, atom a)
    sequence buffer = sprintf("VALUE=%.2g", a)
    sequence typ = IupGetAttribute(c, "ORIENTATION")
    switch typ[1] do
        case 'V' then
          IupSetStrAttribute(lbl_v, "TITLE", buffer)
          break
        case 'H' then
          IupSetStrAttribute(lbl_h, "TITLE", buffer)
          break
    end switch
    return IUP_DEFAULT
end function
--------------------------------------------------------------------------------
function button_press(Ihandle c, atom a)
    sequence typ = IupGetAttribute(c, "ORIENTATION")
    switch typ[1] do
        case 'V' then
          IupSetAttribute(lbl_v, "FGCOLOR", "255 0 0")
          break
        case 'H' then
          IupSetAttribute(lbl_h, "FGCOLOR", "255 0 0")
          break
    end switch
    mousemove(c, a)
    return IUP_DEFAULT
end function
--------------------------------------------------------------------------------
function button_release(Ihandle c,atom a)
    sequence typ = IupGetAttribute(c, "ORIENTATION")
    switch typ[1] do
        case 'V' then
          IupSetAttribute(lbl_v, "FGCOLOR", "0 0 0")
          break
        case 'H' then
          IupSetAttribute(lbl_h, "FGCOLOR", "0 0 0")
          break
    end switch
    mousemove(c, a)
    return IUP_DEFAULT
end function
--------------------------------------------------------------------------------
procedure main()
    IupOpen()
    Ihandle val_v = IupVal("VERTICAL")
    Ihandle val_h = IupVal("HORIZONTAL")
    lbl_v = IupLabel("VALUE=")
    lbl_h = IupLabel("VALUE=")
    IupSetAttribute(lbl_v, "SIZE", "60x")
    IupSetAttribute(lbl_h, "SIZE", "60x")
    IupSetAttribute(val_v, "SHOWTICKS", "5")
    Ihandle dlg_val = IupDialog(
        IupHbox
        ({
            IupSetAttributes(IupHbox
            ({
              val_v,
              lbl_v}
            ), "ALIGNMENT=ACENTER"),
            IupSetAttributes(IupVbox
            ({
              val_h,
              lbl_h}
            ), "ALIGNMENT=ACENTER")}
        )
    )
    IupSetCallback(val_v, "BUTTON_PRESS_CB", Icallback("button_press"))
    IupSetCallback(val_v, "BUTTON_RELEASE_CB", Icallback("button_release"))
    IupSetCallback(val_v, "MOUSEMOVE_CB", Icallback("mousemove"))
    IupSetCallback(val_h, "BUTTON_PRESS_CB", Icallback("button_press"))
    IupSetCallback(val_h, "BUTTON_RELEASE_CB", Icallback("button_release"))
    IupSetCallback(val_h, "MOUSEMOVE_CB", Icallback("mousemove"))
    IupSetAttribute(dlg_val, "TITLE", "IupVal")
    IupSetAttribute(dlg_val, "SIZE", "QUARTERxQUARTER")
    IupSetAttribute(dlg_val, "MARGIN", "10x10")
    IupShowXY(dlg_val, IUP_CENTER, IUP_CENTER)
    IupMainLoop()
    IupClose()
end procedure
--------------------------------------------------------------------------------
main()
--------------------------------------------------------------------------------
-- Previous versions
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
